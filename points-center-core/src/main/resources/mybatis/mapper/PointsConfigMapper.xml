<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.pullock.points.core.dao.mapper.PointsConfigMapper">
  <resultMap id="BaseResultMap" type="fun.pullock.points.core.dao.model.PointsConfigDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="channel_code" jdbcType="VARCHAR" property="channelCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="stock" jdbcType="BIGINT" property="stock" />
    <result column="expiration_rule" jdbcType="LONGVARCHAR" property="expirationRule" />
  </resultMap>

  <sql id="Base_Column_List">
    id, create_time, update_time, channel_code, name, description, status, type, stock, expiration_rule
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from points_config
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from points_config
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="fun.pullock.points.core.dao.model.PointsConfigDO">
    insert into points_config (
      id, create_time, update_time,
      channel_code, name, description, 
      status, type, stock, 
      expiration_rule
    ) values (
      #{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{channelCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=SMALLINT}, #{type,jdbcType=SMALLINT}, #{stock,jdbcType=BIGINT}, 
      #{expirationRule,jdbcType=LONGVARCHAR}
    )
  </insert>

  <insert id="insertSelective" parameterType="fun.pullock.points.core.dao.model.PointsConfigDO">
    insert into points_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="channelCode != null">
        channel_code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="expirationRule != null">
        expiration_rule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channelCode != null">
        #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=BIGINT},
      </if>
      <if test="expirationRule != null">
        #{expirationRule,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="fun.pullock.points.core.dao.model.PointsConfigDO">
    update points_config
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channelCode != null">
        channel_code = #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=BIGINT},
      </if>
      <if test="expirationRule != null">
        expiration_rule = #{expirationRule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="fun.pullock.points.core.dao.model.PointsConfigDO">
    update points_config
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      channel_code = #{channelCode,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      type = #{type,jdbcType=SMALLINT},
      stock = #{stock,jdbcType=BIGINT},
      expiration_rule = #{expirationRule,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from points_config
    order by id desc
  </select>
</mapper>